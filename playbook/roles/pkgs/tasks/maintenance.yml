---
- name: cleanup obsolete resources
  tags: ['maintenance', 'pkg_maintenace']
  block:

    - name: Clean orphan packages
      command: yay -Yc --noconfirm
      register: output
      changed_when: output.stdout.find('removing') != -1

    - name: Clean paccache.
      command: paccache -rk1
      register: output
      changed_when: output.stdout.find('packages removed') != -1


    - name: verify registered packages
      block:
        - name: expand package groups
          command: "pacman -Sqg {{ registered_packages | join(' ')}}"
          changed_when: False
          failed_when: False
          register: expanded_groups_output

        - name: check duplicate packages
          fail: msg="duplicate package {{ item }}"
          when: item is defined
          ignore_errors: yes
          loop: "{{registered_packages | intersect(expanded_groups_output.stdout_lines)}}"

        - name: add packages to registered packages list
          when: expanded_groups_output.stdout_lines | count > 0
          set_fact:
            registered_packages: "{{ registered_packages + expanded_groups_output.stdout_lines }}"

    - name: cleanup unlisted packages
      block:
        - name: find explicitely installed packages
          command: pacman -qQet
          changed_when: False
          register: installed_packages_res

        - name: register obsolete packages
          set_fact:
            obsolete_packages: |
              {{ installed_packages_res.stdout_lines | difference(registered_packages) }}

        - name: remove obsolete packages
          when: obsolete_packages | length > 0
          block:
            - pause:
                prompt: |
                  Remove obsolete packages (yes/no)?
                  {{ obsolete_packages }}
              register: remove_obsolete_pkgs
              delegate_to: localhost

            - name: remove obsolete packages
              when: hostvars['localhost'].remove_obsolete_pkgs.user_input | bool
              pacman: state=absent name="{{ obsolete_packages }}" recurse=yes
